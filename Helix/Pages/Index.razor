@page "/"

<PageTitle>Helix</PageTitle>

@using Blazor.Diagrams.Core.Geometry
@using Helix.Types
@using static Helix.Nodes

@inject HelixDiagram Diagram
@inject IJSRuntime Js
@inject HttpClient Http
@inject Data.MediaPool MediaPool

<MudMenu Label="Add Node" PositionAtCursor="true" ActivationEvent="MouseEvent.RightClick"
         Style="width: 100%; height: 100%;">
    <ActivatorContent>
        <CascadingValue Value="Diagram">
            <DiagramCanvas></DiagramCanvas>
        </CascadingValue>
    </ActivatorContent>
    <ChildContent>
        <MudMenuItem OnClick="CreateNode(p => StyleNode.Create(p, MediaPool.GetLink<string>(), Js))">Style</MudMenuItem>
        <MudMenuItem OnClick="CreateNode(p => TextNode.Create(p, MediaPool.GetLink<string>(), Js))">Text</MudMenuItem>
        <MudMenuItem OnClick="CreateNode(p => ImageNode.Default(p, MediaPool.GetLink<byte[]>(), Js))">Image</MudMenuItem>
        <MudMenuItem OnClick="CreateNode(CompilationNode.Create)">Compilation</MudMenuItem>
        <MudMenuItem OnClick="CreateNode(DatabaseTestNode.Create)">Database Test</MudMenuItem>
    </ChildContent>
</MudMenu>

@code {
    protected override async Task OnInitializedAsync()
    {
        await Diagram.OnLoad();
    }

    private Func<MouseEventArgs, Task> CreateNode(Func<Point, Task<NodeModel>> f) => ev => Utils.add_node(Diagram, f, ev);

}