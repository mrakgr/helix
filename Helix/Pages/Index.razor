@page "/"

<PageTitle>Helix</PageTitle>

@using Blazor.Diagrams.Core.Geometry
@using Helix.Components
@using Helix.Nodes
@using Helix.Types
@using Microsoft.FSharp.Core

@inject HelixDiagram Diagram
@inject IJSRuntime Js

<MudMenu Label="Add Node" PositionAtCursor="true" ActivationEvent="MouseEvent.RightClick"
         Style="width: 100%; height: 100%;">
    <ActivatorContent>
        <CascadingValue Value="Diagram">
            <DiagramCanvas></DiagramCanvas>
        </CascadingValue>
    </ActivatorContent>
    <ChildContent>
        <MudMenuItem OnClick="CreateNode(x => new TextNode(x))">Text</MudMenuItem>
        <MudMenuItem OnClick="CreateNode(x => new ImageNode(x))">Image</MudMenuItem>
        <MudMenuItem OnClick="CreateNode(x => new CompilationNode(x))">Compilation</MudMenuItem>
        <MudMenuItem OnClick="CreateNode(x => new DatabaseTestNode(x))">Database Test</MudMenuItem>
    </ChildContent>
</MudMenu>

@code {
    protected override async Task OnInitializedAsync()
    {
        await Diagram.OnLoad();
    }

    private Action<MouseEventArgs> CreateNode(Func<Point, NodeModel> f) => ev =>
    {
        Utils.add_node(Diagram, f, ev);
    };

}